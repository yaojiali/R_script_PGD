pacman::p_load(tidyverse, skimr, glue, jialir, geepack, broom, patchwork, paletteer, ggthemes,
               ggsci, cowplot, ggstats, ggpubr, viridisLite, grid)

load("../0_rda/1.6_meal with cgm_935vids_add pre-postEMA-food-cohort etc_imp.rda")
names(mealx)
dt <- mealx %>% mutate(vid = factor(vid)) %>% arrange(vid)
geeglm(bg30m_dipPctBaseGlu~bg30m_iAUC_h, id = vid, data = dt) %>% tidy
geeglm(bg30m_dipPctBaseGlu~bg30m_iAUC_h*meal_itemA_refineGrain, id = vid, data = dt) %>% tidy
geeglm(bg30m_dipPctBaseGlu~bg30m_iAUC_h, id = vid, data = dt %>% filter(meal_itemA_refineGrain == 1)) %>% tidy
geeglm(bg30m_dipPctBaseGlu~bg30m_iAUC_h, id = vid, data = dt %>% filter(meal_itemA_refineGrain == 0)) %>% tidy


geeglm(bg30m_dipPctBaseGlu~bg30m_iAUC_h, id = vid, data = dt %>% filter(meal_itemG_dairy == 1)) %>% tidy
geeglm(bg30m_dipPctBaseGlu~bg30m_iAUC_h, id = vid, data = dt %>% filter(meal_itemG_dairy == 0)) %>% tidy


foodList <- c("meal_itemA_refineGrain","meal_itemB_wholeGrain","meal_itemC_fishSeafood","meal_itemD_chicken",
              "meal_itemE_otherMeat","meal_itemF_egg","meal_itemG_dairy", "meal_itemx_soyBeanNut", "meal_itemJ_vege",
              "meal_itemK_fruit","meal_itemL_fried","meal_itemM_sweets", "meal_drinkSugar", "meal_drinkNoSugar")
moveList <- c("p5_pre6hLPA_hr", "p5_pre6hMVPA_hr", "p5_pre6.24hLPA_hr", "p5_pre6.24hMVPA_hr",
              "p5_post2hLPA_hr", "p5_post2hMVPA_hr", "pre24hSleep_hr")
covList <- c("age", "gender", "ethnicity", "edu", "smoking", "alcohol", "bmi", "glycemic") # "bg30m_iAUC_h"


predict.fun <- function(dtm, outcome = '', varList = c(covList, "meal_timeBand3")) {
  dtm <- dtm %>% select(vid, all_of(c(outcome, varList))) %>% na.omit %>% mutate(vid = factor(vid)) %>% arrange(vid)
    fit <- eval(parse(text = glue("geeglm({outcome} ~ {paste(c({varList}), collapse = '+')}, id = vid, data = dtm)")))
    fit %>% tidy(conf.int = T) %>% 
      mutate(Estimate_CI = est_ci(estimate, conf.low, conf.high, sep = ", ", digit = 2),
             pvalue = p.value, yVariable = outcome) %>%
      rename(xVariable = term) %>%
      select(yVariable, xVariable, Estimate_CI, p.value, estimate, conf.low, conf.high) %>% data.frame
}

#
predict.fun(dtm = mealx, outcome = "bg30m_dipPctBaseGlu", varList = c(covList, "meal_timeBand3", foodList, moveList))


#
# mealx <- mealx %>% mutate(proteins = ifelse(meal_itemC_fishSeafood + meal_itemD_chicken + meal_itemE_otherMeat + meal_itemF_egg + 
#                                               meal_itemG_dairy + meal_itemx_soyBeanNut >0, 1, 0),
#                           fruitVeg = ifelse(meal_itemK_fruit + meal_itemJ_vege >0, 1, 0),
#                           finegrain = meal_itemA_refineGrain, 
#                           wholegrain = meal_itemB_wholeGrain,
#                           fried = meal_itemL_fried, 
#                           sweets = meal_itemM_sweets)
# mealx$nfood = mealx %>% select("finegrain","wholegrain","proteins", "fruitVeg","fried","sweets") %>% apply(1, function(x) {sum(x)}) 
# mealx$nfood %>% table
# mealx$foods = mealx %>% select("finegrain","wholegrain","proteins", "fruitVeg","fried","sweets") %>% 
#   apply(1, function(x) {names(x)[x==1] %>% paste(collapse = "+")}) 
# mealx$foods %>% table
# mealx %>% group_by(foods) %>% summarise(n = n(), r = cor(bg30m_dipPctBaseGlu, bg30m_iAUC_h)) %>% 
#   filter(n>50) %>% data.frame()


# summarise(r = cor(bg30m_dipPctBaseGlu, bg30m_iAUC_h))

outcome = "bg30m_dipPctBaseGlu"
varList = c(covList, "meal_timeBand3", foodList, moveList)
dtm <- mealx %>% select(vid, all_of(c(outcome, varList, "bg30m_iAUC_h"))) %>% na.omit %>% mutate(vid = factor(vid)) %>% arrange(vid)

geeglm(bg30m_dipPctBaseGlu ~ bg30m_iAUC_h + age + gender + ethnicity + 
         edu + smoking + alcohol + bmi + glycemic + meal_timeBand3 + 
         meal_itemA_refineGrain + meal_itemB_wholeGrain + meal_itemC_fishSeafood + 
         meal_itemD_chicken + meal_itemE_otherMeat + meal_itemF_egg + 
         meal_itemG_dairy + meal_itemx_soyBeanNut + meal_itemJ_vege + 
         meal_itemK_fruit + meal_itemL_fried + meal_itemM_sweets + 
         meal_drinkSugar + meal_drinkNoSugar + 
         p5_pre6hLPA_hr + p5_pre6hMVPA_hr + 
         p5_pre6.24hLPA_hr + p5_pre6.24hMVPA_hr + p5_post2hLPA_hr + 
         p5_post2hMVPA_hr + pre24hSleep_hr, data = dtm, id = vid) %>% 
  tidy %>% data.frame

# *bg30m_iAUC_h
geeglm(bg30m_dipPctBaseGlu ~ bg30m_iAUC_h + age + gender + ethnicity + 
         edu + smoking + alcohol + bmi + glycemic + meal_timeBand3 + 
         meal_itemA_refineGrain*bg30m_iAUC_h + meal_itemB_wholeGrain*bg30m_iAUC_h + meal_itemC_fishSeafood + 
         meal_itemD_chicken + meal_itemE_otherMeat*bg30m_iAUC_h + meal_itemF_egg*bg30m_iAUC_h + 
         meal_itemG_dairy*bg30m_iAUC_h + meal_itemx_soyBeanNut*bg30m_iAUC_h + meal_itemJ_vege + 
         meal_itemK_fruit + meal_itemL_fried*bg30m_iAUC_h + meal_itemM_sweets + 
         meal_drinkSugar + meal_drinkNoSugar + 
         p5_pre6hLPA_hr + p5_pre6hMVPA_hr + 
         p5_pre6.24hLPA_hr + p5_pre6.24hMVPA_hr + p5_post2hLPA_hr + 
         p5_post2hMVPA_hr + pre24hSleep_hr, data = dtm, id = vid) %>% 
  tidy %>% data.frame



geeglm(bg30m_dipPctBaseGlu ~ bg30m_iAUC_h + age + gender + ethnicity + 
         edu + smoking + alcohol + bmi + glycemic + meal_timeBand3 + 
         meal_itemA_refineGrain*bg30m_iAUC_h + meal_itemB_wholeGrain*bg30m_iAUC_h + meal_itemC_fishSeafood*bg30m_iAUC_h + 
         meal_itemD_chicken*bg30m_iAUC_h + meal_itemE_otherMeat*bg30m_iAUC_h + meal_itemF_egg*bg30m_iAUC_h + 
         meal_itemG_dairy*bg30m_iAUC_h + meal_itemx_soyBeanNut*bg30m_iAUC_h + meal_itemJ_vege*bg30m_iAUC_h + 
         meal_itemK_fruit*bg30m_iAUC_h + meal_itemL_fried*bg30m_iAUC_h + meal_itemM_sweets*bg30m_iAUC_h + 
         meal_drinkSugar*bg30m_iAUC_h + meal_drinkNoSugar*bg30m_iAUC_h + 
         p5_pre6hLPA_hr + p5_pre6hMVPA_hr + 
         p5_pre6.24hLPA_hr + p5_pre6.24hMVPA_hr + p5_post2hLPA_hr + 
         p5_post2hMVPA_hr + pre24hSleep_hr, data = dtm, id = vid) %>% 
  tidy %>% data.frame
